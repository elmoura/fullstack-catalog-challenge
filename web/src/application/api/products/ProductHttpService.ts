import { AxiosInstance } from "axios";
import { injectable } from "inversify";
import { api } from "../api";
import { IProductService } from "@core/products/data/ProductService";
import { IProduct } from "@core/products/entities/Product";
import { AutoGeneratedFields } from "@utils/auto-generated-fields";
import { ISku } from "@core/skus/entities/Sku";

@injectable()
export class ProductHttpService implements IProductService {
  private api: AxiosInstance;

  constructor() {
    this.api = api;
  }

  async createOne(
    data: Omit<IProduct, AutoGeneratedFields>
  ): Promise<IProduct> {
    const response = await this.api.post<IProduct>("/products", data);
    return response.data;
  }

  async list(): Promise<IProduct[]> {
    const response = await this.api.get<IProduct[]>("/products");
    return response.data;
  }

  async listSkusByProductId(productId: string): Promise<ISku[]> {
    const response = await this.api.get<ISku[]>(`/products/${productId}/skus`);
    return response.data;
  }

  async findOne(productId: string): Promise<IProduct> {
    const response = await this.api.get<IProduct>(`/products/${productId}`);
    return response.data;
  }

  async updateOne(
    productId: string,
    data: Partial<IProduct>
  ): Promise<IProduct> {
    const response = await this.api.put<IProduct>(
      `/products/${productId}`,
      data
    );

    return response.data;
  }

  async deleteOne(productId: string): Promise<void> {
    await this.api.delete<IProduct>(`/products/${productId}`);
  }
}
