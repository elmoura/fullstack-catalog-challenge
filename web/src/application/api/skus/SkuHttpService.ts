import { AxiosInstance } from "axios";
import { injectable } from "inversify";
import { api } from "../api";
import { ISkuService } from "@core/skus/data/SkuService";
import { ISku } from "@core/skus/entities/Sku";
import { AutoGeneratedFields } from "@utils/auto-generated-fields";

@injectable()
export class SkuHttpService implements ISkuService {
  private api: AxiosInstance;

  constructor() {
    this.api = api;
  }

  async createOne(data: Omit<ISku, AutoGeneratedFields>): Promise<ISku> {
    const response = await this.api.post<ISku>(
      `/products/${data.productId}/skus`,
      data
    );

    return response.data;
  }

  async listByProduct(productId: string): Promise<ISku[]> {
    const response = await this.api.get<ISku[]>(`/products/${productId}/skus`);
    return response.data;
  }

  async findOne(productId: string, skuId: string): Promise<ISku> {
    const response = await this.api.get<ISku>(
      `/products/${productId}/skus/${skuId}`
    );

    return response.data;
  }

  async updateOne(skuId: string, data: Partial<ISku>): Promise<ISku> {
    const response = await this.api.put<ISku>(
      `/products/${data.productId}/skus/${skuId}`,
      data
    );

    return response.data;
  }

  async deleteOne(productId: string, skuId: string): Promise<void> {
    await this.api.delete<ISku>(`/products/${productId}/skus/${skuId}`);
  }
}
