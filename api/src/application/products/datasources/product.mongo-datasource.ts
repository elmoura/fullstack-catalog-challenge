import { injectable } from "inversify";
import { AutoGeneratedFields } from "@common/auto-generated-fields";
import { IProductDataSource } from "@core/products/data/product.datasource";
import { IProduct } from "@core/products/entities/product";
import { ProductModel } from "../schemas/product-schema";

@injectable()
export class ProductMongoDatasource implements IProductDataSource {
  private productModel = ProductModel;

  async createOne(
    data: Omit<IProduct, AutoGeneratedFields>
  ): Promise<IProduct> {
    const result = await this.productModel.create(data);
    return result.toObject();
  }

  async findOne(productId: string): Promise<IProduct | null> {
    return this.productModel.findById(productId);
  }

  async list(): Promise<IProduct[]> {
    return this.productModel.find();
  }

  async updateOne(
    productId: string,
    data: Partial<IProduct>
  ): Promise<boolean> {
    const result = await this.productModel.updateOne({ _id: productId }, data);
    return result.modifiedCount === 1;
  }

  async deleteOne(productId: string): Promise<boolean> {
    const result = await this.productModel.deleteOne({ _id: productId });
    return result.deletedCount === 1;
  }
}
