import { injectable } from "inversify";
import { ISkuDataSource } from "@core/skus/data/sku.datasource";
import { Sku } from "@core/skus/entities/sku";
import { AutoGeneratedFields } from "@common/auto-generated-fields";
import { SkuModel } from "../schema/sku-schema";

@injectable()
export class SkuMongoDataSource implements ISkuDataSource {
  private skuModel = SkuModel;

  async createOne(data: Omit<Sku, AutoGeneratedFields>): Promise<Sku> {
    const result = await this.skuModel.create(data);
    return result.toObject();
  }

  async findOne(skuId: string): Promise<Sku> {
    return this.skuModel.findById(skuId);
  }

  async listByProductId(productId: string): Promise<Sku[]> {
    return this.skuModel.find({ productId });
  }

  async updateOne(skuId: string, data: Partial<Sku>): Promise<boolean> {
    const result = await this.skuModel.updateOne({ _id: skuId }, data);
    return result.modifiedCount === 1;
  }

  async deleteOne(skuId: string): Promise<boolean> {
    const result = await this.skuModel.deleteOne({ _id: skuId });
    return result.deletedCount === 1;
  }

  async deleteByProduct(productId: string): Promise<boolean> {
    await this.skuModel.deleteMany({ productId });
    return true;
  }
}
